1，orm简介
   （1）通过元数据将程序中的对象自动持久化到关系数据库中(就是关系型数据库和业务实体对象之间做一个映射) 
           (1) 元数据：描述其它数据的数据，或者说是用于提供某种资源的有关信息的结构数据(就是一个数据处理成另外一种数据的中间过度数据)
           (2) 瞬时数据：不能永久保存的数据(比如内存中的数据)
           (3) 持久数据：能够永久保存的数据(比如持久化到数据库的数据)
           (4) 持久化：将瞬时状态数据转化为持久状态数据的机制
   （2）orm解决的三个问题
           映射技术
           (1) 数据类型映射：将数据库的类型映射为编程语言自身的类型
           (2) 类映射：将数据表定义映射为编程语言自身的类
           (3) 关系映射：将数据库中，基于外键的关系连接，转换为编程语言中，基于对象引用的关系连接
           CRUD操作
           (1) CRUD操作是数据库处理时增删改查的首写字母
           (2) 当开发者调用CRUD操作函数时，会将这些调用转化为SQL语句，并通过数据库引擎发送给数据库执行，最后将结果映射为类对象
           缓存优化
           (1) 由于数据库操作比较耗时，所以orm提供了缓存技术
           (2) 将数据库中查询到的数据以类对象的形式保存到内存中，以便之后提取
           (3) 在真正需要读取查询结果时，才会执行数据库select操作               
   （3）优点
           (1) 屏蔽了数据库细节，使开发者无需和sql语句打交道，提高了开发效率
           (2) 便于数据库迁移，不用处理数据访问层sql语法的细微差异
           (3) 应用缓存优化技术，提高了数据库操作效率
           缺点
           (1) 会牺牲程序的执行效率，降低性能，会固定思维模式
           (2) 在对对象做持久化时，ORM一般会持久化所有的属性
           (3) ORM所生成的代码一般不太可能写出很高效的算法

2，python orm库
   （1）sqlalchemy       最成熟的orm框架，资源和文档很丰富
   （2）django orm       Django web框架独有的orm技术
   （3）peewee           基于 sqlalchemy内核开发出来的，轻量级orm   
   （4）storm            中型orm库，需要开发者编写ddl 代码
   （5）sql object       熟悉buby的开发者容易上手
          
3，参考文档
    https://www.cnblogs.com/double1030/archive/2009/02/01/1382062.html
    https://baike.baidu.com/item/%E6%8C%81%E4%B9%85%E5%8C%96/6726574?fr=aladdin
    https://baike.baidu.com/item/%E5%85%83%E6%95%B0%E6%8D%AE/1946090?fr=aladdin
    python高效开发实战