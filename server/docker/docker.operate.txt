计算机基础知识：
操作系统提供给应用程序的接口包括：如何创建，关闭一个进程。如何申请内存。如何操作 IO。以及，操作系统本身的代码是放在硬盘上面的。

docker 是 linux 下面一个轻量级的虚拟机。他和 vmware 最大的不同在于：
vmware 是运行在操作系统上面的一个应用程序，他模拟了硬件的操作，(这部分很大很复杂)，所以你可以在上面安装操作系统。
docker 是 linux 内核提供了一系列的系统调用，从而让 docker 不需要经过模拟，直接操作系统资源，但同时，操作系统又提供了安全隔离等。

比如一个进程，在 vmware 里面，是虚拟机操作系统里面的一个进程，他运行的内存是用的虚拟机的内存，而虚拟机的内存又是作为应用向实体电脑的操作系统申请的。
docker 里面的一个进程，和 linux 里面的一个进程是一样的。没有经过这几层。只是本来的创建进程比如叫做 fork()。docker 使用的创建进程的系统调用叫 fork_lite()。（这里举个例子，实际不是这样）。开销是一样的。但是，linux 对于通过 fork_lite 创建的线程有一系列的限制，比如内存，CPU。

所以，vmware 不管虚拟多少个进程，对于操作系统来说，都是一个进程，而docker创建的进程就是实际的进程。


dockerfile 的作用：dockerfile 的作用就是配置文件。里面列出了需要的文件。比如一个 mysql ，一个redis。然后一个 ubuntu 的发行版。这样每次用这个 dockerfile 启动一个新 docker 运行的时候，里面的内容都是一样的。

这样有一个好处，比如你的代码和需要运行的环境打包成一个镜像。这样到了新的服务器，就不需要复杂的安装编译等。只需要安装 docker，然后运行镜像，结果是一模一样的。


当你运行
docker run -it ubuntu bash
的时候，实际上 docker 下载了一个 ubuntu 的文件系统，注意，内核还是本来这个 linux。所以这个 ubuntu 的文件系统很小。
然后运行了一个进程运行 bash，如果你在里面运行 top ，就会发现，你的虚拟机里面只有2个进程。这2个进程实际上也是运行在本来的 linux 上面的。只不过 linux 对他们做了隔离。
exit 退出之后，相当于退出了一个进程。
